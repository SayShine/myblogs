<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xk.myblogs.service.mapper.ryvue.QrtzBlobTriggersMapper">
  <resultMap id="BaseResultMap" type="com.xk.myblogs.client.entity.ryvue.QrtzBlobTriggers">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    <id column="sched_name" jdbcType="VARCHAR" property="schedName" />
    <id column="trigger_name" jdbcType="VARCHAR" property="triggerName" />
    <id column="trigger_group" jdbcType="VARCHAR" property="triggerGroup" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xk.myblogs.client.entity.ryvue.QrtzBlobTriggers">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    <result column="blob_data" jdbcType="LONGVARBINARY" property="blobData" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    sched_name, trigger_name, trigger_group
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    blob_data
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.xk.myblogs.client.entity.ryvue.QrtzBlobTriggersKey" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from qrtz_blob_triggers
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and trigger_name = #{triggerName,jdbcType=VARCHAR}
      and trigger_group = #{triggerGroup,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.xk.myblogs.client.entity.ryvue.QrtzBlobTriggersKey">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    delete from qrtz_blob_triggers
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and trigger_name = #{triggerName,jdbcType=VARCHAR}
      and trigger_group = #{triggerGroup,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xk.myblogs.client.entity.ryvue.QrtzBlobTriggers">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    insert into qrtz_blob_triggers (sched_name, trigger_name, trigger_group, 
      blob_data)
    values (#{schedName,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, #{triggerGroup,jdbcType=VARCHAR}, 
      #{blobData,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.xk.myblogs.client.entity.ryvue.QrtzBlobTriggers">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    insert into qrtz_blob_triggers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schedName != null">
        sched_name,
      </if>
      <if test="triggerName != null">
        trigger_name,
      </if>
      <if test="triggerGroup != null">
        trigger_group,
      </if>
      <if test="blobData != null">
        blob_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schedName != null">
        #{schedName,jdbcType=VARCHAR},
      </if>
      <if test="triggerName != null">
        #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="triggerGroup != null">
        #{triggerGroup,jdbcType=VARCHAR},
      </if>
      <if test="blobData != null">
        #{blobData,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xk.myblogs.client.entity.ryvue.QrtzBlobTriggers">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    update qrtz_blob_triggers
    <set>
      <if test="blobData != null">
        blob_data = #{blobData,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and trigger_name = #{triggerName,jdbcType=VARCHAR}
      and trigger_group = #{triggerGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xk.myblogs.client.entity.ryvue.QrtzBlobTriggers">
    <!--
      WARNING - @mbg.generated MyBatis Generator Create
    -->
    update qrtz_blob_triggers
    set blob_data = #{blobData,jdbcType=LONGVARBINARY}
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and trigger_name = #{triggerName,jdbcType=VARCHAR}
      and trigger_group = #{triggerGroup,jdbcType=VARCHAR}
  </update>
</mapper>